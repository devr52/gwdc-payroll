/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Payroll_IFrame;

import static Payroll_IFrame.SalmgmtIFrame.bpIn;
import static Payroll_IFrame.SalmgmtIFrame.bpOut;
import static Payroll_IFrame.SalmgmtIFrame.depIn;
import static Payroll_IFrame.SalmgmtIFrame.deptOut;
import static Payroll_IFrame.SalmgmtIFrame.designationOut;
import static Payroll_IFrame.SalmgmtIFrame.dsrIn;
import static Payroll_IFrame.SalmgmtIFrame.dsrOut;
import static Payroll_IFrame.SalmgmtIFrame.empIDout;
import static Payroll_IFrame.SalmgmtIFrame.fnameOut;
import static Payroll_IFrame.SalmgmtIFrame.foodIn;
import static Payroll_IFrame.SalmgmtIFrame.foodOut;
import static Payroll_IFrame.SalmgmtIFrame.hsrIn;
import static Payroll_IFrame.SalmgmtIFrame.hsrOut;
import static Payroll_IFrame.SalmgmtIFrame.leavecIn;
import static Payroll_IFrame.SalmgmtIFrame.msrIn;
import static Payroll_IFrame.SalmgmtIFrame.msrOut;
import static Payroll_IFrame.SalmgmtIFrame.pagibigOut;
import static Payroll_IFrame.SalmgmtIFrame.philhealthOut;
import static Payroll_IFrame.SalmgmtIFrame.salType;
import static Payroll_IFrame.SalmgmtIFrame.sssIn;
import static Payroll_IFrame.SalmgmtIFrame.sssOut;
import static Payroll_IFrame.SalmgmtIFrame.surnameOut;
import static Payroll_IFrame.SalmgmtIFrame.transpoIn;
import static Payroll_IFrame.SalmgmtIFrame.transpoOut;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import static Payroll_IFrame.SalmgmtIFrame.philhealthIn;
import static Payroll_IFrame.SalmgmtIFrame.pagibigIn;
import static Payroll_IFrame.SalmgmtIFrame.picOut;
import static Payroll_IFrame.SalmgmtIFrame.saveBtn1;
import static Payroll_IFrame.SalmgmtIFrame.wdIn;
import javax.swing.ImageIcon;

public class searchP extends javax.swing.JFrame {

   ResultSet rs=null;
    PreparedStatement pst=null;
    Connection conn=null;
    Statement stmt=null;
    

     public void searchTableClick(){
      
        try{
            
            int row=table.getSelectedRow();
            String table_click=(table.getModel().getValueAt(row, 0).toString());
              //disabled();
            
            String query="select * from empdata where empid='"+table_click+"'";
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            
            if(rs.next()){
                designationOut.setText(rs.getString(16));
                fnameOut.setText(rs.getString(1));
                deptOut.setText(rs.getString(2));
                designationOut.setText(rs.getString(10));
                deptOut.setText(rs.getString(11));
                fnameOut.setText(rs.getString(7));
                
            }
           
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
     }
     
     final void updateT(){
       
        try{
            String query="select empid,surname,firstname from empdata ORDER BY EMPID";
            
            pst=conn.prepareStatement(query);

            rs=pst.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }    
     
     public void openConnection(){
        try {
            Class.forName("org.h2.Driver");
            conn = DriverManager.getConnection("jdbc:h2:~/Peeroll;IGNORECASE=TRUE","edmon", "" );
        }
         catch( Exception e )
        {
           JOptionPane.showMessageDialog(null, "PROGRAM ALREADY IN USE.");
        }
    }
     
    public searchP() {
        initComponents();
        
        openConnection();
        
        updateT();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idIn = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable(){
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                // This is how we disable editing:
                return false;
            }
        };
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        surnameIn = new javax.swing.JTextField();
        fnameIn = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });

        idIn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        idIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idInKeyReleased(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel1.setText("Employee ID:");

        jLabel2.setText("Surname:");

        surnameIn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        surnameIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                surnameInKeyReleased(evt);
            }
        });

        fnameIn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        fnameIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fnameInKeyReleased(evt);
            }
        });

        jLabel3.setText("First Name:");

        jPanel6.setBackground(new java.awt.Color(255, 51, 51));

        jLabel29.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("FIND EMPLOYEE");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idIn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(surnameIn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fnameIn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(surnameIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(fnameIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        saveBtn1.setEnabled(false);
        int row=table.getSelectedRow();
        String table_click=(table.getModel().getValueAt(row, 0).toString());

        try{
            String query="select empid,surname,firstname,designation,department,saltype,wd,bp,dsr,hsr,msr,food,transpo,pagibig,sss,philhealth,leavec,dependents,image from empdata where empid='"+table_click+"'";
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();

            if(rs.next()){
                empIDout.setText(rs.getString(1));
                surnameOut.setText(rs.getString(2));
                fnameOut.setText(rs.getString(3));
                designationOut.setText(rs.getString(4));
                deptOut.setText(rs.getString(5));
                if(rs.getString(6)==null)salType.setSelectedItem(" ");
                else{
                    salType.setSelectedItem(rs.getString(6));
                }
                wdIn.setText(rs.getString(7));
                bpIn.setText(rs.getString(8));
                dsrIn.setText(rs.getString(9));
                hsrIn.setText(rs.getString(10));
                msrIn.setText(rs.getString(11));
                foodIn.setText(rs.getString(12));
                transpoIn.setText(rs.getString(13));
                philhealthIn.setText(rs.getString(14));
                sssIn.setText(rs.getString(15));
                pagibigIn.setText(rs.getString(16));
                leavecIn.setText(rs.getString(17));
                depIn.setText(rs.getString(18));
                
                if(rs.getBytes("image")==null){
                    ImageIcon II=new ImageIcon(getClass().getResource("DEFAULT.png"));
                    picOut.setIcon(II);
                }   
                else{
                byte[]imagedata=rs.getBytes("image");
                format=new ImageIcon(imagedata);
                picOut.setIcon(format);
                }
            }
            
                bpOut.setText(bpIn.getText());
                dsrOut.setText(dsrIn.getText());
                hsrOut.setText(hsrIn.getText());
                msrOut.setText(msrIn.getText());
                foodOut.setText(foodIn.getText());
                transpoOut.setText(transpoIn.getText());
                pagibigOut.setText(philhealthIn.getText());
                sssOut.setText(sssIn.getText());
                philhealthOut.setText(pagibigIn.getText());
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
               
           dispose();
        
        
    }//GEN-LAST:event_tableMouseClicked

    private void idInKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idInKeyReleased
            try {

                String query="SELECT empid,surname,firstname FROM empdata where EMPID LIKE ?";

                pst=conn.prepareStatement(query);
                pst.setString(1, idIn.getText()+"%");

                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));

                rs=pst.executeQuery();

                if(rs.next()) {
                    rs=pst.executeQuery();
                    table.setModel(DbUtils.resultSetToTableModel(rs));
                }
               

            }

            catch(SQLException err)   {
                JOptionPane.showMessageDialog(null, err);
            }

        

      /*  else if(surnameRB.isSelected()==true){
            try {

                String query="SELECT empid,surname,firstname FROM empdata where surname=?";

                pst=conn.prepareStatement(query);

                pst.setString(1, searchIn.getText());

                rs=pst.executeQuery();
                salTable.setModel(DbUtils.resultSetToTableModel(rs));

                rs=pst.executeQuery();

                if(rs.next()) {
                    rs=pst.executeQuery();
                    salTable.setModel(DbUtils.resultSetToTableModel(rs));
                }
                else {
                    JOptionPane.showMessageDialog(null,"EMPLOYEE DATA NOT FOUND");
                }

                searchTableClick();

            }
            catch(SQLException err)   {
                JOptionPane.showMessageDialog(null, err);
            }
        }

         else if(designationRB.isSelected()==true){
            try {

                String query="SELECT empid,designation,surname,firstname from empdata where designation=?";

                pst=conn.prepareStatement(query);

                pst.setString(1, searchIn.getText());

                rs=pst.executeQuery();
                salTable.setModel(DbUtils.resultSetToTableModel(rs));

                rs=pst.executeQuery();

                if(rs.next()) {
                    rs=pst.executeQuery();
                    salTable.setModel(DbUtils.resultSetToTableModel(rs));
                }
                else {
                    JOptionPane.showMessageDialog(null,"EMPLOYEE DATA NOT FOUND");
                }

                searchTableClick();

            }
            catch(SQLException err)   {
                JOptionPane.showMessageDialog(null, err);
            }
        }

        else if(deptRB.isSelected()==true){
            try {

                String query="SELECT empid,surname,firstname,department FROM empdata where department=?";

                pst=conn.prepareStatement(query);

                pst.setString(1, searchIn.getText());

                rs=pst.executeQuery();
                salTable.setModel(DbUtils.resultSetToTableModel(rs));

                rs=pst.executeQuery();

                if(rs.next()) {
                    rs=pst.executeQuery();
                    salTable.setModel(DbUtils.resultSetToTableModel(rs));
                }
                else {
                    JOptionPane.showMessageDialog(null,"EMPLOYEE DATA NOT FOUND");
                }
                searchTableClick();

            }
            catch(SQLException err)   {
                JOptionPane.showMessageDialog(null, err);
            }
        }
*/
    }//GEN-LAST:event_idInKeyReleased

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
        searchP dis=new searchP();
        dis.dispose();   
    }//GEN-LAST:event_formFocusLost

    private void surnameInKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_surnameInKeyReleased
        try {

            String query="SELECT empid,surname,firstname FROM EMPDATA where surname LIKE ?";

            pst=conn.prepareStatement(query);

            pst.setString(1, surnameIn.getText()+"%");

            rs=pst.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs));

            rs=pst.executeQuery();

            if(rs.next()) {
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            }
        }

        catch(SQLException err)   {
            JOptionPane.showMessageDialog(null, err);
        }
    }//GEN-LAST:event_surnameInKeyReleased

    private void fnameInKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnameInKeyReleased
        try {

            String query="SELECT empid,surname,firstname FROM EMPDATA where firstname LIKE ?";

            pst=conn.prepareStatement(query);

            pst.setString(1, fnameIn.getText()+"%");

            rs=pst.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs));

            rs=pst.executeQuery();

            if(rs.next()) {
                rs=pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            }
        }

        catch(SQLException err)   {
            JOptionPane.showMessageDialog(null, err);
        }
    }//GEN-LAST:event_fnameInKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new searchP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fnameIn;
    private javax.swing.JTextField idIn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField surnameIn;
    public static javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
private ImageIcon format=null;
String filename=null;
int s=0;
byte[] pimage=null;
}
